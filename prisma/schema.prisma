generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URI")
}

model User {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    email     String    @unique
    password  String
    username  String
    image     String
    updatedAt DateTime  @updatedAt
    createdAt DateTime  @default(now())
    role      Role
    Account   Account[]
    // Session   Session[]
    Session   Session[]
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId()
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.String
    access_token      String? @db.String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.String
    session_state     String?

    user User @relation(fields: [userId], references: [id])

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String   @db.ObjectId
    expires      DateTime

    user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Question {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())
    name      String   @unique
    options   Int
}

model Chips {
    id             String @id @default(auto()) @map("_id") @db.ObjectId
    color          String
    value          Int
    startingAmount Int
}

enum Role {
    ADMIN
    USER
}
